% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emotionalizer.R
\name{emotionalizer}
\alias{emotionalizer}
\title{Calculating sentiment scores of the texts based on the `KOSAC` polarity dataset}
\usage{
emotionalizer(corpus, rate = c("proportion", "number"))
}
\arguments{
\item{corpus}{a character vector of any length or a list of characters for sentiment analysis,
or a tibble made from `tokenizer(tag = "ngram")`}

\item{rate}{in "proportion", the proportion of the largest sentiment will be returned in the `prop` column,
in "number", the number of the largest sentiment will be returned in the `n` column. this is
meaningful when `corpus` is a character vector or a list}
}
\value{
a tibble with input texts, text ids, and sentiments

See examples in \href{https://github.com/junhewk/ktm}{Github}.
}
\description{
If input data is character vectors or a list of a character vector, this function will make
1 to 3 n-grams with `Seunjeon` morpheme analyzer and gathering the
`KOSAC` polarity dataset to calculating sentiment scores of the texts. If input data is
a tibble made by `tokenizer` function, then this function will combine the `KOSAC` polarity
dataset to the input data. The result has the `tibble` format, with text, text id, and each text's
sentiment or conjoined tibble with input token data frame and polarity data set.
Text's sentiment is determined based on the `KOSAC` classification of positive (POS),
negative (NEG), neutral (NEUT), and complex (COMP).
}
\examples{
\dontrun{
# a variable textKor declared with Korean text
emotionalizer(textKor)

# or
textTibble <- tokenizer(textKor, token = "ngram", n = 2, n_min = 1)
emotionalizer(textTibble)
}
}
