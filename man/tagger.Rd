% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tagger.R
\name{tagger}
\alias{tagger}
\title{POS tagger in morpheme form}
\usage{
tagger(corpus, sep = "/", annotate = TRUE, deinflect = FALSE,
  strip_punct = FALSE, strip_number = FALSE)
}
\arguments{
\item{corpus}{a character vector of any length or a list of characters or list of character vectors of length 1}

\item{sep}{character vector, separating character between morpheme and POS tagging (default = `/`)}

\item{annotate}{If FALSE (default), the function will return morphemes only. If FALSE, the function will return POS tagging also.}

\item{deinflect}{If FALSE (default), the function will return the morpheme with inflected forms. If TRUE, morphemes will have its original form.}

\item{strip_punct}{bool, if you want to preserve punctuations in the phrase, set this as FALSE}

\item{strip_number}{bool, if you want to preserve numerics in the phrase, set this as FALSE}
}
\value{
a list with character vectors of morphemes with POS tag

See examples in \href{https://github.com/junhewk/ktm}{Github}.
}
\description{
Analyzing Korean texts to morpheme with or without POS tagging based on `Seunjeon`
morpheme analyzer and `Rscala` scala interface.
}
\examples{
\dontrun{
# a variable textKor declared with Korean text
tagger(textKor)

# without POS tag
tagger(textKor, annotate = FALSE)

# remove punctuations and numbers
tagger(textKor, strip_punct = TRUE, strip_number = TRUE)
}

}
